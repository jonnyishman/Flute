name: Web Preview Deployment

on:
  pull_request:
    paths:
      - 'web/**/*'
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    
    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build
      env:
        # Set base path for GitHub Pages subdirectory
        VITE_BASE: /flute/pr-${{ github.event.number }}/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Create preview directory structure
      run: |
        mkdir -p ../preview-site/pr-${{ github.event.number }}
        cp -r dist/* ../preview-site/pr-${{ github.event.number }}/
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./preview-site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${prNumber}/`;
          
          // Check if preview comment already exists
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
          });
          
          const existingComment = comments.data.find(comment => 
            comment.body.includes('Web Preview Available')
          );
          
          const commentBody = `
          ## ðŸš€ Web Preview Available
          
          Your web changes are now available for preview:
          
          **ðŸ”— [View Preview](${previewUrl})**
          
          This preview will be updated automatically when you push new changes to this PR.
          
          ---
          *Preview deployed from commit ${context.sha.substring(0, 7)}*`;
          
          if (existingComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
          }

concurrency:
  group: web-preview-${{ github.event.number }}
  cancel-in-progress: true
